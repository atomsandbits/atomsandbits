version: '2.2'
services:
  # ~~~ SSL ~~~
  # nginx-proxy:
  #   image: jwilder/nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - "/etc/nginx/vhost.d"
  #     - "/usr/share/nginx/html"
  #     - "/var/run/docker.sock:/tmp/docker.sock:ro"
  #     - "./certs:/etc/nginx/certs:ro"
  # letsencrypt-nginx-proxy-companion:
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   volumes:
  #     - "./certs:/etc/nginx/certs:rw"
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   volumes_from:
  #     - "nginx-proxy"

  mongo:
    build: ./images/mongo
    ports:
      - "$MONGO_PORT:27017"
    environment:
      -  MONGO_HOST=$MONGO_HOST
      -  OPLOG_USER=$OPLOG_USER
      -  OPLOG_PASSWORD=$OPLOG_PASSWORD
  # elasticsearch:
  #   image: "elasticsearch:5"
  #   ports:
  #     - "$ELASTICSEARCH_PORT:9200"
  # mongo-connector:
  #   build: ./images/mongo-connector
  #   depends_on:
  #     - mongo
  #     - elasticsearch
  #   environment:
  #     - MONGO_URL=$MONGO_URL
  #     - ELASTICSEARCH_URL=$ELASTICSEARCH_URL
  about:
    build: ./images/about
    ports:
      - "$ABOUT_PORT:80"
    environment:
      - ROOT_URL=$ABOUT_URL
      - VIRTUAL_HOST=about.atomsandbits.com
      - LETSENCRYPT_HOST=about.atomsandbits.com
      - LETSENCRYPT_EMAIL=contact@atomsandbits.com
  webapp:
    build: ./images/webapp
    ports:
      - "$WEBAPP_PORT:80"
    depends_on:
      - mongo
      # - elasticsearch
      - database
    environment:
      - ROOT_URL=$WEBAPP_URL
      - MONGO_URL=$METEOR_MONGO_URL
      - MONGO_OPLOG_URL=$MONGO_OPLOG_URL
      - DATABASE_URL=$DATABASE_URL
      # - ELASTICSEARCH_URL=$ELASTICSEARCH_URL
      - DB_NAME=$DB_NAME
      - GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - VIRTUAL_HOST=atomsandbits.com
      - LETSENCRYPT_HOST=atomsandbits.com
      - LETSENCRYPT_EMAIL=contact@atomsandbits.com
  database:
    build: ./images/database
    depends_on:
      - mongo
    environment:
      - ROOT_URL=$DATABASE_URL
      - MONGO_URL=$METEOR_MONGO_URL
      - MONGO_OPLOG_URL=$MONGO_OPLOG_URL
  tensormol:
    build: ./images/tensormol
    depends_on:
      - database
    environment:
      - ROOT_URL=$TENSORMOL_URL
      - DATABASE_ADDRESS=$DATABASE_ADDRESS
      - DATABASE_PORT=$DATABASE_PORT
      - CUDA_VISIBLE_DEVICES=$CUDA_VISIBLE_DEVICES
  psi4:
    build: ./images/psi4
    scale: $PSI4_INSTANCES
    depends_on:
      - database
    environment:
      - ROOT_URL=$PSI4_URL
      - DATABASE_URL=$DATABASE_URL
      - OMP_NUM_THREADS=$PSI4_NUM_THREADS
      - PSI4_MAX_MEMORY=$PSI4_MAX_MEMORY
  # pyscf:
  #   build: ./images/pyscf
  #   scale: 4
  #   depends_on:
  #     - mongo
  #   environment:
  #     - ROOT_URL=$PYSCF_URL
  #     - DATABASE_URL=$DATABASE_URL
  #     - OMP_NUM_THREADS=$PYSCF_NUM_THREADS
  #     - PYSCF_MAX_MEMORY=$PYSCF_MAX_MEMORY
  # image-generator:
  #   build: ./images/image-generator
  #   depends_on:
  #     - mongo
  #   environment:
  #     - ROOT_URL=$IMAGE_GENERATOR_URL
  #     - PORT=$IMAGE_GENERATOR_PORT
  #     - MONGO_URL=$METEOR_MONGO_URL
  #     - MONGO_OPLOG_URL=$MONGO_OPLOG_URL
